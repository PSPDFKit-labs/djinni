// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from enum.djinni

#include "EnumUsageRecord.h"  // my header
#include "translation.h"

namespace testsuite {


::testsuite::EnumUsageRecord EnumUsageRecord::toCpp() {
    return ::testsuite::EnumUsageRecord(
        transform<::testsuite::color, ::testsuite::Color>()(E),
        transform<std::experimental::optional<::testsuite::color>, Platform::IBox<::testsuite::Color>^>()(O),
        transform<std::vector<::testsuite::color>, Windows::Foundation::Collections::IVector<::testsuite::Color>^>()(L),
        transform<std::unordered_set<::testsuite::color>, Windows::Foundation::Collections::IIterable<::testsuite::Color>^>()(S),
        transform<std::unordered_map<::testsuite::color, ::testsuite::color>, Windows::Foundation::Collections::IMap<::testsuite::Color, ::testsuite::Color>^>()(M));
}

EnumUsageRecord^ EnumUsageRecord::fromCpp(const ::testsuite::EnumUsageRecord& value) {
    EnumUsageRecord^ ret = ref new EnumUsageRecord();
    ret->E = transform<::testsuite::color, ::testsuite::Color>()(value.e);
    ret->O = transform<std::experimental::optional<::testsuite::color>, Platform::IBox<::testsuite::Color>^>()(value.o);
    ret->L = transform<std::vector<::testsuite::color>, Windows::Foundation::Collections::IVector<::testsuite::Color>^>()(value.l);
    ret->S = transform<std::unordered_set<::testsuite::color>, Windows::Foundation::Collections::IIterable<::testsuite::Color>^>()(value.s);
    ret->M = transform<std::unordered_map<::testsuite::color, ::testsuite::color>, Windows::Foundation::Collections::IMap<::testsuite::Color, ::testsuite::Color>^>()(value.m);
    return ret;
}

}  // namespace testsuite
